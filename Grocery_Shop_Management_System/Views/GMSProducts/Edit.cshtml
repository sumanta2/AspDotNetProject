@model Grocery_DAO.product

@{
    ViewBag.Title = "Edit";
}
<style>

    .formContainer {
        display: flex;
        justify-content: center;
        height: 84vh;
        background-image: Url('../../Content/Images/homeImage.jpg');
        background-size: cover;
    }
    .myFormDesign {
        margin-top: 50px;
        background-color: #fff;
        border-radius: 10px;
        //box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.1);
        padding: 30px;
        max-width: 500px;
        height: fit-content;
        background-color: rgb(245 153 194 / 71%);
    }

    .container h2 {
        text-align: center;
        margin-bottom: 30px;
    }

    .fieldText {
        font-size: 17px;
        font-weight: bold;
    }

    .form-label {
        font-weight: bold;
    }

    .form-control {
        border: none;
        outline: none;
        border-bottom: 1px solid #5555ff;
        border-radius: 0px;
        background-color: rgba(0, 0, 0, 0);
    }

    .btn-submit {
        border-radius: 20px;
    }
</style>

@using (Html.BeginForm("Edit","GMSProducts", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
<div class="formContainer">
    <div class="form-horizontal myFormDesign">

        <h2 class="text-center">Edit Product</h2>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.productId)

        @*<div class="form-group row my-2">
            @Html.LabelFor(model => model.userId, "userId", htmlAttributes: new { @class = "control-label col-md-4 text-primary fieldText " })
            <div class="col-md-8">
                @Html.DropDownList("userId", null, htmlAttributes: new { @class = "form-control col" })
                @Html.ValidationMessageFor(model => model.userId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.productName, htmlAttributes: new { @class = "control-label col-md-4 text-primary fieldText" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-4 text-primary fieldText" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-4 text-primary fieldText" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.stockQuantity, htmlAttributes: new { @class = "control-label col-md-4 text-primary fieldText" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.stockQuantity, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.stockQuantity, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row my-2">
            @Html.LabelFor(model => model.image_name, htmlAttributes: new { @class = "control-label col-md-4 text-primary fieldText" })
            <div class="col-md-8">
                <input type="file" name="upload" class="form-control" />
                @Html.ValidationMessageFor(model => model.image_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-info" })
            </div>
        </div>
    </div>
</div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
